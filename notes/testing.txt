
 

    # Types of Testing
      - Unit Testing
      - Integration Testing
      - End to End Testing (e2e Testing)
          
          
          
      # Unit Testing
       -> Testing one unit/component in isolation


      # Integration Testing
       -> Testing workflow of multiple components ( multiple components working together )

      # End to End Testing (e2e Testing)
       -> Simulating what the user will do throughout the app  

   # Setting up Testing in our app
     - Install react Testing library
     - Install jest
     - Install babel dependencies
     - Configure babel
     - Configure parcel config file to disable default babel transpilation
     - Jest: npx jest --init
     - Install jsdom library  - jsdom is a browser-like environment for Testing
     - Install @babel/preset-react - to make JSX work in test cases
     - Include @babel/preset-react inside babel config  
     - Install @testing-library/jest-dom 

     # add  "watch-test": "jest --watch" to package.json to automatically run the test

    # modifying/altering the fetch to work with jsdom environment
          global.fetch = jest.fn(() => {
              return Promise.resolve({
                  json : ()=> {
                      return Promise.resolve(MOCK_DATA)
                  }
              })
          })
 

    # when ever testing fetch or async operations
      -> we have to wrap render in act function
        ->     await act(() =>  render(<Body />))


   # writing test cases 
     - we can use "it" and "test"

    # __tests__  ("__") is known as "dunder"
 

